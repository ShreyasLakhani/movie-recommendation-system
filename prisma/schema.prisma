generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String           @id @default(cuid())
  name        String?
  email       String           @unique
  password    String
  image       String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  playlists   Playlist[]
  ratings     Rating[]
  reminders   Reminder[]
  preferences UserPreferences?
  watchlist   Movie[]          @relation("UserWatchlist")
  likes       Movie[]          @relation("UserLikes")
}

model UserPreferences {
  id                 String   @id @default(cuid())
  userId             String   @unique
  favoriteGenres     String[]
  emailNotifications Boolean  @default(true)
  language           String   @default("en")
  region             String   @default("US")
  contentMaturity    String   @default("all")
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  user               User     @relation(fields: [userId], references: [id])
}

model Movie {
  id          String     @id
  title       String
  overview    String
  poster_path String?
  backdrop_path String?
  release_date DateTime?
  vote_average Float?
  genre_ids   Int[]
  rating      Float?
  duration    Int?
  language    String?
  budget      Int?
  revenue     Int?
  ratings     Rating[]
  genres      Genre[]    @relation("GenreToMovie")
  playlists   Playlist[] @relation("PlaylistMovies")
  watchlist   User[]     @relation("UserWatchlist")
  likedBy     User[]     @relation("UserLikes")
}

model Genre {
  id     String  @id
  name   String
  movies Movie[] @relation("GenreToMovie")
}

model Rating {
  id        String   @id @default(cuid())
  rating    Float
  review    String?
  createdAt DateTime @default(now())
  userId    String
  movieId   String
  movie     Movie    @relation(fields: [movieId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  @@unique([userId, movieId])
}

model Playlist {
  id        String   @id @default(cuid())
  name      String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  movies    Movie[]  @relation("PlaylistMovies")
}

model Reminder {
  id        String   @id @default(cuid())
  movieId   String
  userId    String
  date      DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
