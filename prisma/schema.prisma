// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  watchlist     Movie[]   @relation("UserWatchlist")
  ratings       Rating[]
  playlists     Playlist[]
  reminders     Reminder[]
}

model Movie {
  id          String    @id
  title       String
  overview    String
  posterPath  String?
  releaseDate DateTime
  genres      Genre[]
  rating      Float
  duration    Int
  language    String
  budget      Int?
  revenue     Int?
  watchlist   User[]    @relation("UserWatchlist")
  ratings     Rating[]
  playlists   Playlist[]  @relation("PlaylistMovies")
}

model Genre {
  id      String   @id
  name    String
  movies  Movie[]
}

model Rating {
  id        String   @id @default(cuid())
  rating    Float
  review    String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  movie     Movie    @relation(fields: [movieId], references: [id])
  movieId   String
}

model Playlist {
  id        String   @id @default(cuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  movies    Movie[]  @relation("PlaylistMovies")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reminder {
  id        String   @id @default(cuid())
  movieId   String
  userId    String
  date      DateTime
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
